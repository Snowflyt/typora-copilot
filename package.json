{
  "name": "typora-copilot",
  "version": "0.3.8",
  "private": true,
  "description": "GitHub Copilot plugin for Typora",
  "keywords": [
    "Typora",
    "Copilot",
    "GitHub Copilot",
    "AI",
    "code completion",
    "code suggestion",
    "code generation"
  ],
  "homepage": "https://github.com/Snowflyt/typora-copilot",
  "bugs": {
    "url": "https://github.com/Snowflyt/typora-copilot/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Snowflyt/typora-copilot"
  },
  "license": "MIT",
  "author": "Snowflyt <gaoge011022@163.com>",
  "type": "module",
  "main": "./index.js",
  "scripts": {
    "build:dev": "rimraf dist && rollup --config rollup.config.ts --configPlugin @rollup/plugin-typescript && node -e \"import fs from 'node:fs'; import { join } from 'node:path'; ['package.json', 'README.md', 'README.zh-CN.md'].forEach((path) => fs.copyFileSync(path, join('dist', path))); ['bin', 'docs'].forEach((dir) => fs.cpSync(dir, join('dist', dir), { recursive: true })); fs.cpSync(join('node_modules', '@github', 'copilot-language-server', 'dist'), join('dist', 'language-server'), { recursive: true }); fs.rmSync(join('dist', 'language-server', 'api'), { recursive: true }); fs.rmSync(join('dist', 'language-server', 'language-server.js')); fs.rmSync(join('dist', 'language-server', 'main.js.map')); fs.renameSync(join('dist', 'language-server', 'main.js'), join('dist', 'language-server', 'language-server.cjs'))\"",
    "build:release": "rimraf dist && npm run test-types && npm test && rollup --config rollup.config.ts --configPlugin @rollup/plugin-typescript && prettier --log-level=silent --print-width 80 --write dist/**/* --ignore-path !dist/ && node -e \"import fs from 'node:fs'; import { join } from 'node:path'; ['package.json', 'README.md', 'README.zh-CN.md'].forEach((path) => fs.copyFileSync(path, join('dist', path))); ['bin', 'docs'].forEach((dir) => fs.cpSync(dir, join('dist', dir), { recursive: true })); fs.cpSync(join('node_modules', '@github', 'copilot-language-server', 'dist'), join('dist', 'language-server'), { recursive: true }); fs.rmSync(join('dist', 'language-server', 'api'), { recursive: true }); fs.rmSync(join('dist', 'language-server', 'language-server.js')); fs.rmSync(join('dist', 'language-server', 'main.js.map')); fs.renameSync(join('dist', 'language-server', 'main.js'), join('dist', 'language-server', 'language-server.cjs'))\"",
    "build:watch": "rimraf dist && node -e \"import fs from 'node:fs'; import { join } from 'node:path'; if (!fs.existsSync('dist')) fs.mkdirSync('dist'); ['package.json', 'README.md', 'README.zh-CN.md'].forEach((path) => fs.copyFileSync(path, join('dist', path))); ['bin', 'docs'].forEach((dir) => fs.cpSync(dir, join('dist', dir), { recursive: true })); fs.cpSync(join('node_modules', '@github', 'copilot-language-server', 'dist'), join('dist', 'language-server'), { recursive: true }); fs.rmSync(join('dist', 'language-server', 'api'), { recursive: true }); fs.rmSync(join('dist', 'language-server', 'language-server.js')); fs.rmSync(join('dist', 'language-server', 'main.js.map')); fs.renameSync(join('dist', 'language-server', 'main.js'), join('dist', 'language-server', 'language-server.cjs'))\" && rollup --config rollup.config.ts --configPlugin @rollup/plugin-typescript --watch",
    "format": "prettier --no-error-on-unmatched-pattern --write {src,test}/**/*.{json,js,jsx,ts,tsx} *.{js,cjs,mjs,ts,cts,mts,json,md}",
    "lint": "eslint {src,test}/**/*.{js,jsx,ts,tsx} *.{js,cjs,mjs,ts,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0 && stylelint \"src/**/*.{css,scss}\"",
    "lint:fix": "eslint --fix {src,test}/**/*.{js,jsx,ts,tsx} *.{js,cjs,mjs,ts,cts,mts} --no-error-on-unmatched-pattern --report-unused-disable-directives-severity error --max-warnings 0 && stylelint --fix \"src/**/*.{css,scss}\"",
    "prepare": "node -e \"import fs from 'node:fs'; import path from 'node:path'; const hooksDir = path.join(process.cwd(), '.githooks'); const gitHooksDir = path.join(process.cwd(), '.git/hooks'); if (fs.existsSync(gitHooksDir)) { fs.readdirSync(hooksDir).forEach(file => { const srcFile = path.join(hooksDir, file); const destFile = path.join(gitHooksDir, file); fs.copyFileSync(srcFile, destFile); if (process.platform !== 'win32' && !file.endsWith('.cmd')) { fs.chmodSync(destFile, 0o755); } }); }\"",
    "test": "vitest run",
    "test-types": "typroof",
    "test:cov": "vitest run --coverage",
    "test:ui": "vitest --ui --coverage.enabled=true",
    "test:watch": "vitest",
    "test:watch-cov": "vitest --coverage",
    "typecheck": "tsc --noEmit -p tsconfig.build.json"
  },
  "dependencies": {
    "@github/copilot-language-server": "^1.311.0",
    "@preact/signals": "^2.0.4",
    "color2k": "^2.0.3",
    "fast-diff": "^1.3.0",
    "preact": "^10.26.5",
    "radash": "^12.1.0",
    "semver": "^7.7.1",
    "string-ts": "^2.2.1"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.8.0",
    "@eslint/js": "^9.25.1",
    "@rollup/plugin-commonjs": "^28.0.3",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/plugin-typescript": "^12.1.2",
    "@total-typescript/ts-reset": "^0.6.1",
    "@types/codemirror": "^5.60.15",
    "@types/core-js": "^2.5.8",
    "@types/jquery": "^3.5.32",
    "@types/node": "^22.15.3",
    "@types/rangy": "^1.3.0",
    "@types/semver": "^7.7.0",
    "@types/ws": "^8.18.1",
    "@vitest/coverage-v8": "^3.1.2",
    "@vitest/ui": "^3.1.2",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^10.1.2",
    "eslint-import-resolver-typescript": "^4.3.4",
    "eslint-plugin-import-x": "^4.11.0",
    "eslint-plugin-jsdoc": "^50.6.11",
    "eslint-plugin-prettier": "^5.2.6",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-sonarjs": "^3.0.2",
    "eslint-plugin-sort-destructure-keys": "^2.0.0",
    "globals": "^16.0.0",
    "happy-dom": "^17.4.6",
    "postcss": "^8.5.3",
    "prettier": "^3.5.3",
    "prettier-plugin-packagejson": "^2.5.10",
    "replace-in-file": "^8.3.0",
    "rimraf": "^6.0.1",
    "rollup": "^4.40.1",
    "rollup-plugin-postcss": "^4.0.2",
    "sass": "^1.87.0",
    "stylelint": "^16.19.1",
    "stylelint-config-standard-scss": "^14.0.0",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.31.1",
    "typroof": "^0.5.1",
    "vitest": "^3.1.2",
    "ws": "^8.18.1"
  }
}
